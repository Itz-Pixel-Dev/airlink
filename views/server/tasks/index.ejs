<%- include('../../components/template') %>

<div class="p-4 sm:p-6 lg:p-8">
	<div class="sm:flex sm:items-center">
		<div class="sm:flex-auto">
			<h1 class="text-2xl font-semibold text-neutral-900 dark:text-white">Scheduled Tasks</h1>
			<p class="mt-2 text-sm text-neutral-700 dark:text-neutral-400">Manage automated tasks for your server.</p>
		</div>
		<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
			<button onclick="showNewTaskModal()" class="block px-4 py-2 text-sm font-medium text-center text-white bg-neutral-900 rounded-xl hover:bg-neutral-800 dark:bg-neutral-800 dark:hover:bg-neutral-700">
				Create Task
			</button>
		</div>
	</div>

	<!-- Tasks List -->
	<div class="mt-8 flow-root">
		<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
			<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
				<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-xl">
					<table class="min-w-full divide-y divide-neutral-300 dark:divide-neutral-700">
						<thead class="bg-neutral-50 dark:bg-neutral-900">
							<tr>
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-neutral-900 dark:text-white sm:pl-6">Name</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Schedule</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Command</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Last Run</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Status</th>
								<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
									<span class="sr-only">Actions</span>
								</th>
							</tr>
						</thead>
						<tbody class="divide-y divide-neutral-200 dark:divide-neutral-800 bg-white dark:bg-neutral-900">
							<% tasks.forEach(task => { %>
							<tr>
								<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-neutral-900 dark:text-white sm:pl-6">
									<%= task.name %>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<code class="text-xs bg-neutral-100 dark:bg-neutral-800 px-2 py-1 rounded">
										<%= task.schedule %>
									</code>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<code class="text-xs bg-neutral-100 dark:bg-neutral-800 px-2 py-1 rounded">
										<%= task.command %>
									</code>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<%= task.lastRun ? new Date(task.lastRun).toLocaleString() : 'Never' %>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm">
									<% if (task.enabled) { %>
										<span class="inline-flex items-center rounded-full bg-green-100 px-2.5 py-0.5 text-xs font-medium text-green-800 dark:bg-green-900 dark:text-green-300">
											Enabled
										</span>
									<% } else { %>
										<span class="inline-flex items-center rounded-full bg-red-100 px-2.5 py-0.5 text-xs font-medium text-red-800 dark:bg-red-900 dark:text-red-300">
											Disabled
										</span>
									<% } %>
								</td>
								<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
									<button onclick="toggleTask('<%= task.id %>')" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white mr-4">
										<%= task.enabled ? 'Disable' : 'Enable' %>
									</button>
									<button onclick="editTask('<%= task.id %>')" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white mr-4">Edit</button>
									<button onclick="deleteTask('<%= task.id %>')" class="text-red-600 hover:text-red-900 dark:hover:text-red-400">Delete</button>
								</td>
							</tr>
							<% }) %>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Task Modal -->
<div id="task-modal" class="hidden fixed inset-0 bg-neutral-900/50 backdrop-blur-sm z-50">
	<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
		<div class="relative transform overflow-hidden rounded-xl bg-white dark:bg-neutral-900 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
			<form id="task-form" onsubmit="saveTask(event)" class="space-y-4">
				<input type="hidden" id="task-id">
				
				<!-- Name -->
				<div>
					<label for="task-name" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Task Name</label>
					<input type="text" id="task-name" name="name" required
						class="mt-1 block w-full rounded-xl border-neutral-300 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm">
				</div>

				<!-- Schedule -->
				<div>
					<label for="task-schedule" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Schedule (Cron Expression)</label>
					<input type="text" id="task-schedule" name="schedule" required
						class="mt-1 block w-full rounded-xl border-neutral-300 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm"
						placeholder="*/5 * * * *">
					<p class="mt-1 text-sm text-neutral-500">Example: */5 * * * * (every 5 minutes)</p>
				</div>

				<!-- Command -->
				<div>
					<label for="task-command" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Command</label>
					<input type="text" id="task-command" name="command" required
						class="mt-1 block w-full rounded-xl border-neutral-300 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm"
						placeholder="say Server backup starting...">
				</div>

				<div class="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
					<button type="submit"
						class="inline-flex w-full justify-center rounded-xl bg-neutral-900 px-3 py-2 text-sm font-medium text-white shadow-sm hover:bg-neutral-800 dark:bg-neutral-800 dark:hover:bg-neutral-700 sm:col-start-2">
						Save Task
					</button>
					<button type="button" onclick="hideTaskModal()"
						class="mt-3 inline-flex w-full justify-center rounded-xl bg-white px-3 py-2 text-sm font-medium text-neutral-700 shadow-sm ring-1 ring-inset ring-neutral-300 hover:bg-neutral-50 dark:bg-neutral-800 dark:text-neutral-300 dark:ring-neutral-700 dark:hover:bg-neutral-700 sm:col-start-1 sm:mt-0">
						Cancel
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
function showNewTaskModal() {
	document.getElementById('task-id').value = '';
	document.getElementById('task-name').value = '';
	document.getElementById('task-schedule').value = '';
	document.getElementById('task-command').value = '';
	document.getElementById('task-modal').classList.remove('hidden');
}

function hideTaskModal() {
	document.getElementById('task-modal').classList.add('hidden');
}

function editTask(id) {
	fetch(`/server/<%= server.id %>/tasks/${id}`).then(response => response.json()).then(task => {
		document.getElementById('task-id').value = task.id;
		document.getElementById('task-name').value = task.name;
		document.getElementById('task-schedule').value = task.schedule;
		document.getElementById('task-command').value = task.command;
		document.getElementById('task-modal').classList.remove('hidden');
	});
}

function saveTask(event) {
	event.preventDefault();
	const id = document.getElementById('task-id').value;
	const data = {
		name: document.getElementById('task-name').value,
		schedule: document.getElementById('task-schedule').value,
		command: document.getElementById('task-command').value
	};

	fetch(`/server/<%= server.id %>/tasks${id ? `/${id}` : ''}`, {
		method: id ? 'PUT' : 'POST',
		headers: { 'Content-Type': 'application/json' },
		body: JSON.stringify(data)
	}).then(response => {
		if (response.ok) {
			window.location.reload();
		} else {
			showToast('Failed to save task', 'error');
		}
	});
}

function toggleTask(id) {
	fetch(`/server/<%= server.id %>/tasks/${id}/toggle`, {
		method: 'POST'
	}).then(response => {
		if (response.ok) {
			window.location.reload();
		} else {
			showToast('Failed to toggle task', 'error');
		}
	});
}

function deleteTask(id) {
	if (confirm('Are you sure you want to delete this task?')) {
		fetch(`/server/<%= server.id %>/tasks/${id}`, {
			method: 'DELETE'
		}).then(response => {
			if (response.ok) {
				window.location.reload();
			} else {
				showToast('Failed to delete task', 'error');
			}
		});
	}
}
</script>