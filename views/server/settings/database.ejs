<%- include('../../components/template') %>

<div class="p-4 sm:p-6 lg:p-8">
	<div class="sm:flex sm:items-center">
		<div class="sm:flex-auto">
			<h1 class="text-2xl font-semibold text-neutral-900 dark:text-white">Database Management</h1>
			<p class="mt-2 text-sm text-neutral-700 dark:text-neutral-400">Manage databases for your server.</p>
		</div>
		<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
			<button onclick="showNewDatabaseModal()" class="block px-4 py-2 text-sm font-medium text-center text-white bg-neutral-900 rounded-xl hover:bg-neutral-800 dark:bg-neutral-800 dark:hover:bg-neutral-700">
				Create Database
			</button>
		</div>
	</div>

	<!-- Database List -->
	<div class="mt-8 flow-root">
		<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
			<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
				<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-xl">
					<table class="min-w-full divide-y divide-neutral-300 dark:divide-neutral-700">
						<thead class="bg-neutral-50 dark:bg-neutral-900">
							<tr>
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-neutral-900 dark:text-white sm:pl-6">Database Name</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Host</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Username</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-neutral-900 dark:text-white">Size</th>
								<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
									<span class="sr-only">Actions</span>
								</th>
							</tr>
						</thead>
						<tbody class="divide-y divide-neutral-200 dark:divide-neutral-800 bg-white dark:bg-neutral-900">
							<% databases.forEach(db => { %>
							<tr>
								<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-neutral-900 dark:text-white sm:pl-6">
									<%= db.name %>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<%= db.host %>:<%= db.port %>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<%= db.username %>
								</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-neutral-500 dark:text-neutral-400">
									<%= db.size %> MB
								</td>
								<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
									<button onclick="showCredentials('<%= db.id %>')" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white mr-4">View Credentials</button>
									<button onclick="rotatePassword('<%= db.id %>')" class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white mr-4">Rotate Password</button>
									<button onclick="deleteDatabase('<%= db.id %>')" class="text-red-600 hover:text-red-900 dark:hover:text-red-400">Delete</button>
								</td>
							</tr>
							<% }) %>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Database Modal -->
<div id="database-modal" class="hidden fixed inset-0 bg-neutral-900/50 backdrop-blur-sm z-50">
	<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
		<div class="relative transform overflow-hidden rounded-xl bg-white dark:bg-neutral-900 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
			<form id="database-form" onsubmit="saveDatabase(event)" class="space-y-4">
				<!-- Database Name -->
				<div>
					<label for="database-name" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Database Name</label>
					<input type="text" id="database-name" name="name" required pattern="[a-zA-Z0-9_]+"
						class="mt-1 block w-full rounded-xl border-neutral-300 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm"
						placeholder="my_database">
					<p class="mt-1 text-sm text-neutral-500">Only alphanumeric characters and underscores allowed</p>
				</div>

				<!-- Database Host -->
				<div>
					<label for="database-host" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Database Host</label>
					<select id="database-host" name="host" required
						class="mt-1 block w-full rounded-xl border-neutral-300 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm">
						<% hosts.forEach(host => { %>
							<option value="<%= host.id %>"><%= host.name %> (<%= host.host %>:<%= host.port %>)</option>
						<% }) %>
					</select>
				</div>

				<div class="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
					<button type="submit"
						class="inline-flex w-full justify-center rounded-xl bg-neutral-900 px-3 py-2 text-sm font-medium text-white shadow-sm hover:bg-neutral-800 dark:bg-neutral-800 dark:hover:bg-neutral-700 sm:col-start-2">
						Create Database
					</button>
					<button type="button" onclick="hideDatabaseModal()"
						class="mt-3 inline-flex w-full justify-center rounded-xl bg-white px-3 py-2 text-sm font-medium text-neutral-700 shadow-sm ring-1 ring-inset ring-neutral-300 hover:bg-neutral-50 dark:bg-neutral-800 dark:text-neutral-300 dark:ring-neutral-700 dark:hover:bg-neutral-700 sm:col-start-1 sm:mt-0">
						Cancel
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Credentials Modal -->
<div id="credentials-modal" class="hidden fixed inset-0 bg-neutral-900/50 backdrop-blur-sm z-50">
	<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
		<div class="relative transform overflow-hidden rounded-xl bg-white dark:bg-neutral-900 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
			<div class="space-y-4">
				<h3 class="text-lg font-medium text-neutral-900 dark:text-white">Database Credentials</h3>
				
				<div>
					<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Connection String</label>
					<div class="mt-1 flex rounded-xl shadow-sm">
						<input type="text" id="connection-string" readonly
							class="block w-full rounded-l-xl border-neutral-300 bg-neutral-50 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm">
						<button type="button" onclick="copyToClipboard('connection-string')"
							class="inline-flex items-center rounded-r-xl border border-l-0 border-neutral-300 bg-neutral-50 px-3 text-sm text-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-400">
							Copy
						</button>
					</div>
				</div>

				<div class="grid grid-cols-2 gap-4">
					<div>
						<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Username</label>
						<div class="mt-1 flex rounded-xl shadow-sm">
							<input type="text" id="username" readonly
								class="block w-full rounded-l-xl border-neutral-300 bg-neutral-50 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm">
							<button type="button" onclick="copyToClipboard('username')"
								class="inline-flex items-center rounded-r-xl border border-l-0 border-neutral-300 bg-neutral-50 px-3 text-sm text-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-400">
								Copy
							</button>
						</div>
					</div>

					<div>
						<label class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Password</label>
						<div class="mt-1 flex rounded-xl shadow-sm">
							<input type="password" id="password" readonly
								class="block w-full rounded-l-xl border-neutral-300 bg-neutral-50 shadow-sm focus:border-neutral-500 focus:ring-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white sm:text-sm">
							<button type="button" onclick="togglePassword()"
								class="inline-flex items-center border border-l-0 border-neutral-300 bg-neutral-50 px-3 text-sm text-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-400">
								Show
							</button>
							<button type="button" onclick="copyToClipboard('password')"
								class="inline-flex items-center rounded-r-xl border border-l-0 border-neutral-300 bg-neutral-50 px-3 text-sm text-neutral-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-400">
								Copy
							</button>
						</div>
					</div>
				</div>

				<div class="mt-5">
					<button type="button" onclick="hideCredentialsModal()"
						class="inline-flex w-full justify-center rounded-xl bg-white px-3 py-2 text-sm font-medium text-neutral-700 shadow-sm ring-1 ring-inset ring-neutral-300 hover:bg-neutral-50 dark:bg-neutral-800 dark:text-neutral-300 dark:ring-neutral-700 dark:hover:bg-neutral-700">
						Close
					</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
function showNewDatabaseModal() {
	document.getElementById('database-modal').classList.remove('hidden');
}

function hideDatabaseModal() {
	document.getElementById('database-modal').classList.add('hidden');
}

function showCredentials(id) {
	fetch(`/server/<%= server.id %>/database/${id}/credentials`).then(response => response.json()).then(data => {
		document.getElementById('connection-string').value = data.connectionString;
		document.getElementById('username').value = data.username;
		document.getElementById('password').value = data.password;
		document.getElementById('credentials-modal').classList.remove('hidden');
	});
}

function hideCredentialsModal() {
	document.getElementById('credentials-modal').classList.add('hidden');
}

function togglePassword() {
	const input = document.getElementById('password');
	const button = input.nextElementSibling;
	if (input.type === 'password') {
		input.type = 'text';
		button.textContent = 'Hide';
	} else {
		input.type = 'password';
		button.textContent = 'Show';
	}
}

function copyToClipboard(id) {
	const input = document.getElementById(id);
	navigator.clipboard.writeText(input.value).then(() => {
		showToast('Copied to clipboard', 'success');
	});
}

function saveDatabase(event) {
	event.preventDefault();
	const data = {
		name: document.getElementById('database-name').value,
		host: document.getElementById('database-host').value
	};

	fetch(`/server/<%= server.id %>/database`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		body: JSON.stringify(data)
	}).then(response => {
		if (response.ok) {
			window.location.reload();
		} else {
			showToast('Failed to create database', 'error');
		}
	});
}

function rotatePassword(id) {
	if (confirm('Are you sure you want to rotate this database password? Applications using the current password will need to be updated.')) {
		fetch(`/server/<%= server.id %>/database/${id}/rotate`, {
			method: 'POST'
		}).then(response => {
			if (response.ok) {
				showToast('Password rotated successfully', 'success');
				showCredentials(id);
			} else {
				showToast('Failed to rotate password', 'error');
			}
		});
	}
}

function deleteDatabase(id) {
	if (confirm('Are you sure you want to delete this database? This action cannot be undone.')) {
		fetch(`/server/<%= server.id %>/database/${id}`, {
			method: 'DELETE'
		}).then(response => {
			if (response.ok) {
				window.location.reload();
			} else {
				showToast('Failed to delete database', 'error');
			}
		});
	}
}
</script>